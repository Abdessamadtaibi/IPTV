"""
Django settings for IPTV_project project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

SECRET_KEY = 'django-insecure-7ic8i%oq2e3pbjp$d)_e!&7pwi5@xgqe6nmzkju-!z$^+ke3qw'

ALLOWED_HOSTS = ['iptvplus.us','www.iptvplus.us']
SECURE_CROSS_ORIGIN_OPENER_POLICY = 'same-origin-allow-popus'


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'IPTV_api',
    'blog',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_framework_simplejwt',
    'djoser',
    'corsheaders',
    'compressor',
    'django.contrib.sitemaps',
]
CORS_ALLOW_CREDENTIALS = True  # Allow frontend to send cookies
CORS_ALLOWED_ORIGINS = [
    "https://iptv.plus",      # Your main domain
    "https://www.iptv.plus",
    "https://iptvplus.us",    # Your secondary domain
    "https://www.iptvplus.us",
]
CSRF_COOKIE_HTTPONLY = True
CSRF_COOKIE_SAMESITE = "Strict"  
CSRF_COOKIE_SECURE = True  

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
     'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'compressor.finders.CompressorFinder',
]

ROOT_URLCONF = 'IPTV_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'IPTV_project.wsgi.application'


# Database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'iptv_db',
        'USER': 'iptv_user',
        'PASSWORD': 'Abdou@2003',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases




# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
LOGIN_URL = "/login/"
STATIC_URL = '/static/'
MEDIA_URL = '/media/'
import os
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
STATICFILES_DIRS =  [
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
COMPRESS_ENABLED = True          # Enable compression
COMPRESS_OFFLINE = True          # Required for `compress` command # Defined earlier
# Optional optimizations
COMPRESS_CSS_FILTERS = [
    'compressor.filters.css_default.CssAbsoluteFilter',
    'compressor.filters.cssmin.CSSMinFilter',  # Minify CSS
]
COMPRESS_JS_FILTERS = [
    'compressor.filters.jsmin.JSMinFilter',    # Minify JS
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {


    'DEFAULT_FILTER_BACKENDS': [
        'rest_framework.filters.OrderingFilter',
        'rest_framework.filters.SearchFilter',
    ],


    'DEFAULT_PAGINATION_CLASS':'rest_framework.pagination.PageNumberPagination',


    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',  # For token-based auth
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',  # For session-based auth
    ),


    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
}
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"  # Change to your email provider
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = "at.iptvplus@gmail.com"  # Replace with your email
EMAIL_HOST_PASSWORD = "Abdou@2003"  # Use environment variables for security
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
DJOSER = {
    'LOGIN_FIELD': 'username',  # Change to 'email' if you want users to log in with email
    "PASSWORD_RESET_SHOW_EMAIL_NOT_FOUND": True,  # Requires password confirmation during registration
    'PASSWORD_RESET_CONFIRM_URL': 'password-reset/{uid}/{token}',  # Customize this URL
    'USERNAME_RESET_CONFIRM_URL': 'username-reset/{uid}/{token}',
    'ACTIVATION_URL': 'activate/{uid}/{token}',
    'SERIALIZERS': {},  # URL for password reset
    'USERNAME_CHANGED_EMAIL_CONFIRMATION': False,  # Optional: sends email on username change
    'PASSWORD_CHANGED_EMAIL_CONFIRMATION': False,  # Optional: sends email on password change
    'SEND_CONFIRMATION_EMAIL': False,
      "EMAIL": {
        "password_reset": "iptv_project.email.PasswordResetEmail",
    },
}
